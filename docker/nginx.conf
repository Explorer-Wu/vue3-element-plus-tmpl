#运行用户
#user somebody;

#启动进程,通常设置成和cpu的数量相等
worker_processes  1;

# nginx前台启动
daemon off;

#工作模式及连接数上限
events {
    worker_connections 1024;    #单个后台worker process进程的最大并发链接数
}

#全局错误日志
error_log  /var/log/nginx/error.log warn;
error_log  /var/log/nginx/notice.log  notice;
error_log  /var/log/nginx/info.log  info;

#PID文件，记录当前启动的nginx的进程ID
pid  /var/run/nginx.pid;

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    #设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    #设定日志
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
                      
    access_log    /var/log/nginx/access.log  main;
    rewrite_log     on;
    
    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;
 
    #连接超时时间
    keepalive_timeout  120;
    tcp_nodelay        on;
    
    #gzip压缩开关
    gzip on;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;
    # 开启etag验证
    etag on;  
    # 设置缓存过期时间为7天 
    expires 7d;   

    include /etc/nginx/conf.d/*.conf;
    #设定实际的服务器列表 
    upstream api_server{
        server 127.0.0.1:8088;
    }
 
    #HTTP服务器
    server {
        #监听80端口，80端口是知名端口号，用于HTTP协议
        listen       80;
        
        #定义使用www.xx.com访问 或者 localhost
        server_name  localhost;
        
        #首页
        index index.html
        
        #指向webapp的目录
        root  /usr/share/nginx/;
        
        #编码格式
        charset utf-8;
        
        #代理配置参数
        client_max_body_size        100m;
        client_body_buffer_size     128k;
        proxy_connect_timeout       10;
        proxy_send_timeout          1800;
        proxy_read_timeout          1800;
        proxy_set_header            Host $host;
        proxy_set_header            X-Forwarder-For $remote_addr;
        proxy_buffer_size           4k;
        proxy_buffers               4 32k;
        proxy_busy_buffers_size     64k;
        proxy_temp_file_write_size  64k;
        # auth_basic "status";
 
        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {
            root   /usr/share/nginx/html/release;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;  #VUE项目，配置路由（必须）
            proxy_pass http://api_server;
        } 

        # location ^~ /h5view {
        #     alias  /usr/share/nginx/html/release; # H5编译文件的目录,index.html所在目录
        #     try_files $uri $uri/ /index.html last;
        #     index  index.html index.htm;
        # }
 
        #静态文件，nginx自己处理
        location ~ ^/(images|javascript|js|css|flash|media|public)/ {
            root  /usr/share/nginx/html;
            #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
            expires 30d;
        }
    
        #设定查看Nginx状态的地址
        location /NginxStatus {
            stub_status           on;
            access_log            on;
            auth_basic            "NginxStatus";
            auth_basic_user_file  conf/htpasswd;
        }
    
        #禁止访问 .htxxx 文件
        location ~ /\.ht {
            deny all;
        }
        
        #错误处理页面（可选择性配置）
        error_page   404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
           root   /usr/share/nginx/html;
        }
    }
}